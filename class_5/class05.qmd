---
title: "classs05: Data Visualization"
author: "Anagha (PID: A16450123)"
format: pdf
---

## Base R graphics vs ggplot2

There are many graphics systems available in R, including so called "base" R graphics and the bvery popular **ggplot2** package.

To compare these let's play with teh inbuilt "cars" dataset.


```{r}
head(cars)
```
To use "base" R I can simply call the "plot()" function:
```{r}
plot(cars)
```
To use "ggplot2" package I first need to install it with the function "install.packages("ggplot2")"

I will run this in my R console (i.e the R brain) as I do not want to re-install it everytime I render my report...

The main function in this package is called "ggplot()
"
```{r}
library(ggplot2)
ggplot()
```
To make a figure with ggplot I need 3 things:

- **data** (what I want to plot)
- **aesthetic** mapping of data to plot i want
- the **geoms** (how I want to plot the data)

```{r}
ggplot(data=cars) + 
  aes(x=speed, y=dist) +
  geom_point() +
  geom_smooth()

```
ggplot is much more verbose than base R plots but it has a consistent layer system that I can use to make just about any plot

```{r}
ggplot(data=cars) + 
  aes(x=speed, y=dist) +
  geom_point() +
  geom_smooth(se=F, method="lm") +
  labs(title="Stopping distance for old cars",
       subtitle= "From inbuilt cars dataset",
       caption="BIMM 143",
       x= "speed (mpg)", y="stopping distance (ft)") + 
    theme_bw()

```

## A more complicated plot

Lets plot some gene expression data

The code below reads the results of a differential expression analysis where a new anti-viral drug is being tested. So 

```{r}
url <- "https://bioboot.github.io/bimm143_S20/class-material/up_down_expression.txt"
genes <- read.delim(url)
head(genes)
```

> Q. How many genes are in this dataset?

```{r}
nrow(genes)
```
>Q. How can we summarize the last column - the "State" column?

```{r}
table(genes$State)
```

```{r}
p <- ggplot(genes) +
  aes(x=Condition1, y=Condition2, col=State) +
  geom_point()
```

I can now just call `p` when I want to plot or add to it

```{r}
p  + labs(title="Gene Expression Changes Upon Drug Treatment",
  subtitle = "Differential expression analysis of new anti-viral drug",
       x="Control", y="Drug Treated") +
       scale_color_manual(values=c("blue", "gray", "red"))
```

## Going further

Here I read a slightly larger dataset

```{r}
#File location online
url <- "https://raw.githubusercontent.com/jennybc/gapminder/master/inst/extdata/gapminder.tsv"

gapminder <- read.delim(url)
head(gapminder)
```

```{r}
ggplot(gapminder) + 
  aes(x=gdpPercap, y=lifeExp, col=continent, size=pop) +
  geom_point(alpha=0.3)
```
A very useful layer to add sometimes is for "faceting".

```{r}
ggplot(gapminder) + 
  aes(x=gdpPercap, y=lifeExp, col=continent, size=pop) +
  geom_point(alpha=0.3) +
    facet_wrap(~continent)
```
